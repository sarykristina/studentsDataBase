name: C/C++ CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install GoogleTest
      run: |
        sudo apt-get update
        sudo apt-get install -y libgtest-dev cmake
        cd /usr/src/gtest
        sudo cmake .
        sudo make
        sudo cp lib/*.a /usr/lib/
    - name: Installation
      run: sudo apt update && sudo apt install -y build-essential
    
    - name: Compile
      run: make all
    
    - name: Execute tests
      run: ./program.out --test
      
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y libgtest-dev cmake gcovr
        cd /usr/src/gtest && sudo cmake . && sudo make && sudo cp lib/*.a /usr/lib/
        
    - name: Build, test and generate coverage
      run: |
        g++ -std=c++17 --coverage -o program.out main.cpp -lgtest -lgtest_main -pthread
        ./program.out --test
        gcovr --xml coverage.cobertura.xml
        
    - name: Extract coverage percentage
      id: coverage
      run: |
        COVERAGE=$(grep -o 'line-rate="[0-9.]*"' coverage.cobertura.xml | head -1 | grep -o '[0-9.]*' | awk '{print int($1*100)}')
        if [ -z "$COVERAGE" ]; then COVERAGE=0; fi
        echo "percentage=$COVERAGE" >> $GITHUB_OUTPUT
        
        if [ "$COVERAGE" -ge 90 ]; then COLOR="brightgreen"
        elif [ "$COVERAGE" -ge 80 ]; then COLOR="green"  
        elif [ "$COVERAGE" -ge 70 ]; then COLOR="yellowgreen"
        elif [ "$COVERAGE" -ge 60 ]; then COLOR="yellow"
        else COLOR="red"; fi
        
        echo "color=$COLOR" >> $GITHUB_OUTPUT
        echo "Coverage: $COVERAGE% (Color: $COLOR)"
        
    - name: Update coverage badge in README
      uses: schneegans/dynamic-badges-action@v1.0.0
      with:
        auth: ${{ secrets.GIST_TOKEN }}
        gistID: ${{ secrets.GIST_ID }}
        filename: coverage.json
        label: Test coverage
        message: ${{ steps.coverage.outputs.percentage }}%
        color: ${{ steps.coverage.outputs.color }}
